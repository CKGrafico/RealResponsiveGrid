@mixin responsiveGrid(
	// Number of columns #default: 12
	$max : 12,
	// Columns 1 to i #default: 1-1 1-2 1-3 1-4 1-5 1-6 1-7 1-8 1-9 1-10 1-11 1-12
	$one-i: 1 2 3 4 5 6 7 8 9 10 11 12,
	// Columns i to max #default: 2-12 3-12 4-12 5-12 6-12 7-12 8-12 9-12 10-12 11-12
	$i-max : 2 3 4 5 6 7 8 9 10 11,
	// Breakpoints #default: two defect breakpoints
	$breakpoint_1 : 800px,
	$breakpoint_2 : 600px,
	$breakpoint_3 : 300px
){
	.grid {
		margin: 0 auto;
		padding: 0;
		width: 100%;

		@media only screen and (max-width: $breakpoint_1){
			font-size: 0.8em;
			padding: 0.1%;
			width: 99.9%;
		}
	}

	.grid-row {
		display: table;
		width: 100%;

	}

	/* Columns Grid V2 */
	@each $i in $one-i{
		.col_1-#{$i} {
			width: (100%/$i);
		}
	}

	@each $i in $i-max{
		@if $i > $max {
			@warn "Error: Yo can't have column number bigger than max number : "+$max+" < "+$i;
		}
		.col_#{$i}-12 {
			width: ((100%/$max)*$i);
		}
	}

	/* All Columns */
	[class*='col_'] {
		display: table-cell;
		@media only screen and (max-width: $breakpoint_2){
			display: table-row;
			width: 100%
		}
	}

	/* Mediaqueries */
	@media only screen and (max-width: $breakpoint_2){
		$float: left;

		.three_quarters {
			float: $float;
			width: 75%;
		}
		.half {
			float: $float;
			width: 50%;
		}

		.third {
			float: $float;
			width: 33.3333333%;
		}

		.fourth {
			float: $float;
			width: 25%;
		}

		.hidden {
			display: none;
		}
	}

	@media only screen and (max-width: $breakpoint_3){
		[class*='col_'] {
			width: 100%;
		}
	}
}
